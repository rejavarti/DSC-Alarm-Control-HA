# Home Assistant Configuration for DSC Alarm System
# This file demonstrates the correct YAML structure to avoid common configuration errors
# 
# IMPORTANT: Each top-level section (mqtt, alarm_control_panel, sensor, etc.) must be at 
# the root level of the YAML file, NOT nested under other sections.

# Default Home Assistant configuration
default_config:

# MQTT Configuration - TOP LEVEL SECTION
# This configures the MQTT broker connection
mqtt:
  broker: !secret mqtt_broker_ip
  port: 1883
  username: !secret mqtt_username
  password: !secret mqtt_password
  client_id: homeassistant_dsc
  keepalive: 60
  discovery: true
  birth_message:
    topic: "homeassistant/status"
    payload: "online"
  will_message:
    topic: "homeassistant/status" 
    payload: "offline"

# Alarm Control Panel Configuration - TOP LEVEL SECTION
# This section defines MQTT-based alarm control panels
alarm_control_panel:
  - name: "DSC 1500 Alarm Panel"
    unique_id: dsc_partition_1
    state_topic: "dsc/Get/Partition1"
    availability_topic: "dsc/Status"
    command_topic: "dsc/Set"
    code: !secret dsc_alarm_code
    
    # Enhanced command template with better error handling
    command_template: >
      {% if action == "disarm" %}
        {% if code is defined and code != "" %}
          1!{{ code }}
        {% else %}
          1D
        {% endif %}
      {% elif action == "arm_home" %}
        1S
      {% elif action == "arm_away" %}  
        1A
      {% elif action == "arm_night" %}
        1N
      {% else %}
        {{ action }}
      {% endif %}
    
    # Payload mappings
    payload_disarm: "disarm"
    payload_arm_home: "arm_home"
    payload_arm_away: "arm_away"
    payload_arm_night: "arm_night"
    
    # Enhanced supported features
    supported_features:
      - arm_home
      - arm_away
      - arm_night
      - trigger
    
    # Security settings
    code_arm_required: false  # Set to true if panel requires code for arming
    code_disarm_required: true
    code_trigger_required: true
    
    # Device information for better HA integration
    device:
      identifiers: ["dsc_keybus_interface"]
      name: "DSC Security System"
      model: "PC1500/PC1550 Series"
      manufacturer: "DSC"
      sw_version: "Enhanced v1.5"
      configuration_url: !secret esp32_ip

# Sensor Configuration - TOP LEVEL SECTION  
# This section defines MQTT-based sensors
sensor:
  - name: "Security Partition 1 Status"
    unique_id: dsc_partition_1_status
    state_topic: "dsc/Get/Partition1/Message"
    availability_topic: "dsc/Status"
    icon: "mdi:shield-check"
    device:
      identifiers: ["dsc_keybus_interface"]
    json_attributes_topic: "dsc/Get/Partition1/Attributes"
    
  # System Health and Diagnostics
  - name: "DSC System Uptime"
    unique_id: dsc_system_uptime
    state_topic: "dsc/Diagnostics/Uptime"
    availability_topic: "dsc/Status"
    unit_of_measurement: "s"
    device_class: "duration"
    icon: "mdi:timer-outline"
    device:
      identifiers: ["dsc_keybus_interface"]

# Binary Sensor Configuration - TOP LEVEL SECTION
# This section defines MQTT-based binary sensors
binary_sensor:
  # System Health Monitoring
  - name: "DSC System Health"
    unique_id: dsc_system_health
    state_topic: "dsc/Diagnostics/SystemHealthy"
    availability_topic: "dsc/Status"
    device_class: "problem"
    payload_on: "false"  # Inverted - problem when not healthy
    payload_off: "true"
    icon: "mdi:heart-pulse"
    device:
      identifiers: ["dsc_keybus_interface"]

  # Security System Status
  - name: "Security System Trouble"
    unique_id: dsc_trouble
    state_topic: "dsc/Get/Trouble"
    availability_topic: "dsc/Status"
    device_class: "problem"
    payload_on: "1"
    payload_off: "0"
    icon: "mdi:alert-circle"
    device:
      identifiers: ["dsc_keybus_interface"]

  # Zone Sensors
  - name: "Back Door"
    unique_id: dsc_zone_1
    state_topic: "dsc/Get/Zone1"
    availability_topic: "dsc/Status"
    device_class: "door"
    payload_on: "1"
    payload_off: "0"
    icon: "mdi:door"
    device:
      identifiers: ["dsc_keybus_interface"]

# Button Configuration - TOP LEVEL SECTION
# This section defines MQTT-based buttons (use with caution)
button:
  - name: "Fire Alarm"
    unique_id: dsc_fire_button
    command_topic: "dsc/Set"
    payload_press: "f"
    icon: "mdi:fire"
    availability_topic: "dsc/Status"
    device:
      identifiers: ["dsc_keybus_interface"]

# Automation Configuration - TOP LEVEL SECTION
# This section defines automations (NOT nested under mqtt!)
automation:
  # System Health Monitoring
  - alias: "DSC System Health Alert"
    trigger:
      - platform: state
        entity_id: binary_sensor.dsc_system_health
        to: "on"  # Problem detected
    action:
      - service: notify.persistent_notification
        data:
          title: "DSC System Alert"
          message: "DSC alarm system has detected a problem. Check diagnostics."
      - service: logbook.log
        data:
          name: "DSC System"
          message: "System health problem detected"

  # Keybus Disconnection Alert
  - alias: "DSC Keybus Disconnected Alert"
    trigger:
      - platform: state
        entity_id: binary_sensor.dsc_keybus_connected
        to: "off"
        for: "00:01:00"  # Alert after 1 minute
    action:
      - service: notify.persistent_notification
        data:
          title: "DSC Keybus Disconnected"
          message: "DSC alarm system communication lost"

# ============================================================================
# COMMON CONFIGURATION MISTAKES TO AVOID:
# ============================================================================
#
# ❌ WRONG - Nesting automation under mqtt:
# mqtt:
#   broker: ...
#   automation:  # <- This is INCORRECT!
#     - alias: ...
#
# ❌ WRONG - Nesting mqtt under mqtt:  
# mqtt:
#   broker: ...
#   mqtt:  # <- This is INCORRECT!
#     discovery: true
#
# ❌ WRONG - Missing top-level sections:
# mqtt:
#   broker: ...
#   alarm_control_panel:  # <- This should be at root level!
#     - name: ...
#
# ✅ CORRECT - All sections at root level:
# mqtt:
#   broker: ...
# 
# alarm_control_panel:
#   - name: ...
#
# automation:
#   - alias: ...
#
# ============================================================================
# STRUCTURE VALIDATION:
# ============================================================================
# Before using this configuration:
# 1. Ensure your secrets.yaml contains all required values
# 2. Check YAML syntax with: python3 -c "import yaml; yaml.safe_load(open('configuration.yaml'))"
# 3. Run Home Assistant configuration check: hass --script check_config
# 4. Validate DSC-specific config: python3 validate_config.py