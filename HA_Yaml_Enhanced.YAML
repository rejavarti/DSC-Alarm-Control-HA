# Enhanced Home Assistant Configuration for DSC Alarm System
# This configuration provides improved robustness, diagnostics, and device integration
# Copy the relevant sections to your Home Assistant configuration.yaml

# Main MQTT Configuration
mqtt:
  broker: !secret mqtt_broker_ip
  port: 1883
  username: !secret mqtt_username
  password: !secret mqtt_password
  client_id: homeassistant_dsc
  keepalive: 60
  discovery: true
  birth_message:
    topic: "homeassistant/status"
    payload: "online"
  will_message:
    topic: "homeassistant/status" 
    payload: "offline"

# ⚠️  MQTT ENTITIES REMOVED - Use MQTT Discovery or UI instead
# 
# The alarm_control_panel section has been removed because Home Assistant 
# no longer supports YAML configuration for MQTT entities.
#
# To configure the DSC alarm panel:
# 1. Use ESPHome configuration (see extras/ESPHome/DscAlarm.yaml)
# 2. Or manually add via Settings > Devices & Services > MQTT > Add Entity
#
# Previous configuration details for reference:
# - Name: "DSC 1500 Alarm Panel"
# - unique_id: dsc_partition_1
# - state_topic: "dsc/Get/Partition1"
# - command_topic: "dsc/Set"
# - availability_topic: "dsc/Status"

# ⚠️  MQTT ENTITIES REMOVED - Use MQTT Discovery or UI instead
# 
# The sensor section has been removed because Home Assistant 
# no longer supports YAML configuration for MQTT entities.
#
# To configure DSC sensors:
# 1. Use ESPHome configuration (see extras/ESPHome/DscAlarm.yaml) 
# 2. Or manually add via Settings > Devices & Services > MQTT > Add Entity
#
# Previous sensor configurations for reference:
# - Security Partition 1 Status (unique_id: dsc_partition_1_status)
# - DSC System Uptime (unique_id: dsc_system_uptime)  
# - DSC Free Memory (unique_id: dsc_free_memory)
# - DSC WiFi Signal Strength (unique_id: dsc_wifi_rssi)
# All with availability_topic: "dsc/Status"

# Template sensors are still supported in YAML
sensor:
  # Example template sensor that can reference MQTT entities set up via Discovery/UI
  - platform: template
    sensors:
      dsc_system_summary:
        friendly_name: "DSC System Summary"
        value_template: >
          {% if is_state('binary_sensor.dsc_system_health', 'on') %}
            System Healthy
          {% elif is_state('binary_sensor.security_system_trouble', 'on') %}
            Trouble Detected
          {% else %}
            Unknown Status
          {% endif %}
        icon_template: >
          {% if is_state('binary_sensor.dsc_system_health', 'on') %}
            mdi:shield-check
          {% else %}
            mdi:shield-alert
          {% endif %}

# ⚠️  MQTT ENTITIES REMOVED - Use MQTT Discovery or UI instead
# 
# The binary_sensor section has been removed because Home Assistant 
# no longer supports YAML configuration for MQTT entities.
#
# To configure DSC binary sensors:
# 1. Use ESPHome configuration (see extras/ESPHome/DscAlarm.yaml)
# 2. Or manually add via Settings > Devices & Services > MQTT > Add Entity
#
# Previous binary sensor configurations for reference:
# - DSC System Health (unique_id: dsc_system_health)
# - DSC Keybus Connected (unique_id: dsc_keybus_connected) 
# - DSC Buffer Overflow (unique_id: dsc_buffer_overflow)
# - Security System Trouble (unique_id: dsc_trouble)
# - Downstairs Smoke Alarm (unique_id: dsc_fire_1)
# - Zone sensors: Back Door, Front Door, Upper Patio Door, etc.
# - PGM outputs: DSC PGM 1, DSC PGM 8
# All with availability_topic: "dsc/Status"

# Template binary sensors are still supported in YAML
binary_sensor:
  # Example template binary sensor that can reference MQTT entities
  - platform: template  
    sensors:
      any_door_open:
        friendly_name: "Any Door Open"
        value_template: >
          {{ is_state('binary_sensor.back_door', 'on') or 
             is_state('binary_sensor.front_door', 'on') or
             is_state('binary_sensor.upper_patio_door', 'on') }}
        device_class: door
        icon_template: >
          {% if is_state('binary_sensor.any_door_open', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door-closed
          {% endif %}

# ⚠️  MQTT ENTITIES REMOVED - Use MQTT Discovery or UI instead
# 
# The button section has been removed because Home Assistant 
# no longer supports YAML configuration for MQTT entities.
#
# To configure DSC buttons:
# 1. Use ESPHome configuration (see extras/ESPHome/DscAlarm.yaml)
# 2. Or manually add via Settings > Devices & Services > MQTT > Add Entity
#
# Previous button configurations for reference:
# - Fire Alarm (unique_id: dsc_fire_button)
# - Medical Alarm (unique_id: dsc_aux_button) 
# - Panic Alarm (unique_id: dsc_panic_button)
# All with command_topic: "dsc/Set" and availability_topic: "dsc/Status"
#
# ⚠️  WARNING: These are emergency buttons - secure them properly if re-enabled

# Enhanced Automations for Better System Management
automation:
  # System Health Monitoring
  - alias: "DSC System Health Alert"
    trigger:
      - platform: state
        entity_id: binary_sensor.dsc_system_health
        to: "on"  # Problem detected
    action:
      - service: notify.persistent_notification
        data:
          title: "DSC System Alert"
          message: "DSC alarm system has detected a problem. Check diagnostics."
      - service: logbook.log
        data:
          name: "DSC System"
          message: "System health problem detected"

  # Buffer Overflow Alert
  - alias: "DSC Buffer Overflow Alert"
    trigger:
      - platform: state
        entity_id: binary_sensor.dsc_buffer_overflow
        to: "on"
    action:
      - service: notify.persistent_notification
        data:
          title: "DSC Buffer Overflow"
          message: "DSC system buffer overflow detected - system may be too busy"

  # Keybus Disconnection Alert
  - alias: "DSC Keybus Disconnected Alert"
    trigger:
      - platform: state
        entity_id: binary_sensor.dsc_keybus_connected
        to: "off"
        for: "00:01:00"  # Alert after 1 minute
    action:
      - service: notify.persistent_notification
        data:
          title: "DSC Keybus Disconnected"
          message: "DSC alarm system communication lost"

# Custom Dashboard Card Configuration (Lovelace)
# Add this to your dashboard configuration:
#
# type: entities
# title: DSC Security System
# entities:
#   - alarm_control_panel.dsc_1500_alarm_panel
#   - sensor.security_partition_1_status
#   - binary_sensor.security_system_trouble
#   - binary_sensor.dsc_system_health
#   - sensor.dsc_system_uptime
#   - binary_sensor.dsc_keybus_connected

# Security Considerations:
# 1. Create secrets.yaml from secrets.yaml.example with your actual values
# 2. Access codes are now properly stored using !secret references
# 3. Use MQTT authentication and TLS encryption in production
# 4. Consider removing emergency buttons or securing them with confirmation
# 5. Regularly monitor system health sensors
# 6. Set up notifications for system troubles and connectivity issues