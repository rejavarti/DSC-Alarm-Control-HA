;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev

[env]
; Common settings for all environments
framework = arduino
monitor_speed = 115200
lib_ldf_mode = deep+

; Common libraries used across examples
lib_deps = 
    knolleary/PubSubClient@^2.8
    ; Add other common dependencies here as needed

; Build flags for debugging (optional)
build_flags = 
    -DDEBUG_ESP_PORT=Serial
    -DDEBUG_ESP_CORE

[env:uno]
; Arduino Uno (ATmega328P)
platform = atmelavr
board = uno
lib_deps = 
    ${env.lib_deps}

[env:nano]
; Arduino Nano (ATmega328P)
platform = atmelavr
board = nanoatmega328
lib_deps = 
    ${env.lib_deps}

[env:mega]
; Arduino Mega 2560
platform = atmelavr
board = megaatmega2560
lib_deps = 
    ${env.lib_deps}

[env:nodemcuv2]
; NodeMCU v2 (ESP8266)
platform = espressif8266
board = nodemcuv2
lib_deps = 
    ${env.lib_deps}
    ESP8266WiFi

[env:d1_mini]
; Wemos D1 Mini (ESP8266)
platform = espressif8266
board = d1_mini
lib_deps = 
    ${env.lib_deps}
    ESP8266WiFi

[env:esp12e]
; ESP8266 ESP-12E
platform = espressif8266
board = esp12e
lib_deps = 
    ${env.lib_deps}
    ESP8266WiFi

[env:esp32dev]
; ESP32 Development Board
platform = espressif32
board = esp32dev
lib_deps = 
    ${env.lib_deps}
    WiFi

[env:esp32-poe]
; ESP32-POE by Olimex
platform = espressif32
board = esp32-poe
lib_deps = 
    ${env.lib_deps}
    WiFi

[env:esp32s2]
; ESP32-S2
platform = espressif32
board = esp32-s2-saola-1
lib_deps = 
    ${env.lib_deps}
    WiFi

[env:esp32c3]
; ESP32-C3
platform = espressif32
board = esp32-c3-devkitm-1
lib_deps = 
    ${env.lib_deps}
    WiFi

; Example environment configurations for specific use cases
[env:homeassistant-esp32]
; Optimized for Home Assistant MQTT integration
platform = espressif32
board = esp32dev
lib_deps = 
    ${env.lib_deps}
    WiFi
    ArduinoJson@^6.19.4
build_flags = 
    ${env.build_flags}
    -DHOME_ASSISTANT_INTEGRATION

[env:homeassistant-esp8266]
; Optimized for Home Assistant MQTT integration
platform = espressif8266
board = nodemcuv2
lib_deps = 
    ${env.lib_deps}
    ESP8266WiFi
    ArduinoJson@^6.19.4
build_flags = 
    ${env.build_flags}
    -DHOME_ASSISTANT_INTEGRATION